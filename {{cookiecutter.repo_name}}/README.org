* {{ cookiecutter.project_name }}

{{ cookiecutter.description }}

** Usage

Run from sources:

    ./dosh run
    # aka sbcl --load run.lisp

choose your lisp:

    LISP=ccl ./dosh run

or build and run the binary:

```
$ ./dosh build
$ ./{{ cookiecutter.project_name }} [name]
Hello [name] from {{ cookiecutter.project_name }}
```

** Roswell integration

Roswell is an implementation manager and [script launcher](https://github.com/roswell/roswell/wiki/Roswell-as-a-Scripting-Environment).

A POC script is in the roswell/ directory.

Your users can install the script with `{{ cookiecutter.username }}/{{ cookiecutter.project_name }}`.


** Dev

*** Slynk

Because we're using qlot, we don't want to `M-x sly` from inside
emacs.  Instead, we want to start the sbcl session using the runner in
the dir: `./dosh slynk`, then `M-x sly-connect` to the running sbcl,
which listens on port 4008 by default.

*** Testing

Tests are defined with [Fiveam](https://common-lisp.net/project/fiveam/docs/).

Run them from the terminal with `./dosh test`. You should see test results.

```bash
$ ./dosh test
Running test suite TESTMAIN
 Running test TEST1 .
 Did 1 check.
    Pass: 1 (100%)
    Skip: 0 ( 0%)
    Fail: 0 ( 0%)
```

On Slime, load the test package and run `run!`.

---

Licence: GPLv3+
