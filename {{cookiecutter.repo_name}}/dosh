#!/usr/bin/env bash
# Do - The Simplest Build Tool on Earth.
# Documentation and examples see https://github.com/8gears/do
#
SCRIPTNAME=`basename "$0"`
BASEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/..

LISP=sbcl
LISP_ARGS=""
LISP_BUILD_ARGS=""

if [ ${LISP}=="sbcl" ]; then
    LISP_ARGS="--noinform --no-userinit"
    LISP_BUILD_ARGS="--non-interactive"
fi

BASE_LISP="${LISP} ${LISP_ARGS} --load .qlot/setup.lisp"

build() {
    ${LISP} \
	    ${LISP_ARGS} \
	    ${LISP_BUILD_ARGS} \
		--load .qlot/setup.lisp \
		--load {{ cookiecutter.project_name}}.asd \
		--eval '(ql:quickload :{{ cookiecutter.project_name}})' \
		--eval '(asdf:make :{{ cookiecutter.project_name}})'
}

run() {
    ${BASE_LISP} --load run.lisp --end-toplevel-options "$@"
}

slynk() {
    # We want to run slink with our quicklisp taken care of by qlot, so we
    # can't just M-x sly from emacs.  We have to run this, then
    # sly-connect to localhost:4008

    # Make sure we're in the script directory because we look below here for slynk.asd
    SCRIPT_DIR=$(dirname $(readlink -f $0))
    cd ${SCRIPT_DIR}

    # Find the dir tht contains slynk.asd
    SLYNK_DIR=$(find .qlot/dists/sly -path ".qlot/dists/sly/*/slynk/slynk.asd")

    # Start slynk listener
    PORT=4008
    exec qlot exec rlwrap ros run --eval '(push #p"'${SLYNK_DIR}'/" asdf:*central-registry*)' \
	 --eval '(asdf:compile-system :slynk)' \
	 --eval '(load "{{ cookiecutter.project_name}}.asd")' \
	 --eval '(load "{{ cookiecutter.project_name}}.asd")' \
	 --eval '(ql:quickload "{{ cookiecutter.project_name}}")' \
	 --eval '(ql:quickload "{{ cookiecutter.project_name}}-tests")' \
	 --eval '(slynk:create-server :port '$PORT')' \
	 --eval '(in-package :{{ cookiecutter.project_name}}-tests/tests/main)'
}

test() {
    ${BASE_LISP} --load run-tests.lisp --end-toplevel-options "$@"
}

"$@" # <- execute the task
[ "$#" -gt 0 ] || printf "Usage:\n\t./${SCRIPTNAME} %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"

